name: Run CI Tests

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      quickpizza:
        image: ghcr.io/grafana/quickpizza-local:latest
        ports:
          - 3333:3333

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # This exists bc if you destroy all things managed by Terraform and then re-create them... 
      # the project ID will change. This step fetches the right projectID based on the project name.
      - name: Fetch "backend" projectID
        env:
          GRAFANA_API_TOKEN: ${{ secrets.K6_CLOUD_TOKEN }}
          GRAFANA_STACK_ID: ${{ secrets.GRAFANA_STACK_ID }}
        run: |
          ./tools/fetch_gck6_projectID.sh backend

      - name: Set up k6
        uses: grafana/setup-k6-action@v1

      - name: Run backend tests
        id: run_k6
        uses: grafana/run-k6-action@v1
        env:
          K6_CLOUD_TOKEN: ${{ secrets.K6_CLOUD_TOKEN }}
          K6_CLOUD_PROJECT_ID: ${{ env.K6_CLOUD_PROJECT_ID }}
          BASE_URL: http://localhost:3333
        with:
          path: |
            ./src/backend/*.ts
          flags: --vus 10 --duration 60s
          parallel: true
          fail-fast: false
          cloud-run-locally: false
          cloud-comment-on-pr: true

      - name: Annotate test runs with GitHub metadata
        env:
          K6_CLOUD_TOKEN: ${{ secrets.K6_CLOUD_TOKEN }}
          GRAFANA_STACK_ID: ${{ secrets.GRAFANA_STACK_ID }}
          K6_TEST_RUN_IDS: ${{ steps.run_k6.outputs.testRunIds }}
          GIT_BRANCH: ${{ github.ref_name }}
        run: ./tools/set_gck6_note.sh

  build-extensions-image:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            my-docker-hub-namespace/my-docker-hub-repository
            ghcr.io/${{ github.repository }}

      - name: Build and push Docker images
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: extensions
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ghcr.io/k6-with-extensions
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
